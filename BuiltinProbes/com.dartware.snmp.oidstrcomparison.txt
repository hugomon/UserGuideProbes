<!--
	Test an OID for Equality (com.dartware.snmp.oidcomparison.txt)
    Custom Probe for InterMapper (http://www.intermapper.com)
    Please feel free to use this as a base for further development.

	 3 Jul 2007 Modified from Single OID Viewer -reb
	 5 May 2008 Added autorecord section -cls
	22 Apr 2009 Added clear-exists flag to handle the case where the variable doesn't
	            exist anymore, and clean up messages to identify that situation. -dns
	 4 Sep 2012 Change autorecord to datasets section. -jpd
	15 Apr 2013 - Edited description for User Guide (via Probe Doc Generator), 
                Changed the order of parameters to match the description -bobm

	You can read the Developer Guide to learn more about InterMapper Probes. It's at:
		http://intermapper.com/go.php?to=intermapper.devguide
-->

<header>
	"type"			=	"custom-snmp"
	"package"		=	"com.dartware"
	"probe_name"	=	"snmp.oidstrcomparison"
	"human_name"	=	"SNMP - String Comparison"
	"version"		=	"1.8"
	"address_type"	=	"IP,AT"
	"port_number"	=	"161"
	"display_name"	=	"SNMP/String Comparison"
	"flags"			=	"Minimal"
</header>

<snmp-device-properties>
	nomib2="true"
	pdutype="get-request"
	clear-exists="true"
</snmp-device-properties>

<description>
\GB\Comparison Probe\P\

This probe retrieves a single SNMP MIB variable, compares it to a specified value, and sets the device's severity based on the comparison. It also displays the value in the Status Window.

\i\Variable\p\ - the MIB name or OID to retrieve. If you have imported the MIB for this device, enter the symbolic name for this value. Otherwise, enter its OID. 

\i\Test\p\ - choose whether the device is equal to the \i\Value\p\ parameter or not. 

\i\Value\p\ - the value to compare with the MIB variable's value.

\i\Severity\p\ - choose severity level to use if the value does not match the specified value.

\i\Legend\p\ - a text string used to identify the variable in the status window and in strip charts. If left blank, the variable's name or OID is used.

\i\Units\p\ - a text string displayed next to the variable's value in the Status Window. Usually used for units of measure (packets/sec, degrees, etc.) 

\i\Tag\p\ - A short text string that identifies a particular class of dataset. Tags are used to correlate different variables from different probes that describe the same type of data, such as CPU% or temperature.

</description>

-- Parameters are user-settable values that the probe uses for its comparisons.
-- Specify the default values here. The customer can change them and they will be retained for each device.

<parameters>
	"Variable"								=	"ifNumber.0"
	"Test[Equal,NotEqual]"					=	"NotEqual"
	"Value"									=	""
	"Severity[Critical,Alarm,Warning]"		=	"Warning"
	"Legend"								=	""
	"Units"									=	""
	"Tag"									=	"exampletag"
</parameters>

-- Specify the variable name, its OID, a format (usually DEFAULT) and a short description.
-- CALCULATION variables are computed from other values already retrieved from the device.

<snmp-device-variables>

	theLegend,	$Legend != "" ? "$Legend" : "$Variable",	CALCULATION,	"Legend/OID"
	theOID,		$Variable,									DEFAULT,		"$theLegend"

	checkNE,	${Test[Equal,NotEqual]} == "NotEqual",		CALCULATION,	"checkNE"
	checkEQ,	${Test[Equal,NotEqual]} == "Equal",			CALCULATION,	"checkEQ"

	goCRIT,		${Severity[Critical,Alarm,Warning]} == "Critical",	CALCULATION,	"goCRIT"
	goALRM,		${Severity[Critical,Alarm,Warning]} == "Alarm",		CALCULATION,	"goALRM"
	goWARN,		${Severity[Critical,Alarm,Warning]} == "Warning",	CALCULATION,	"goWARN"

</snmp-device-variables>

<snmp-device-thresholds>

	okay:		$checkEQ && !defined("theOID")					"$theLegend is undefined (not equal to anything)"

	critical:	$goCRIT && $checkNE && !defined("theOID")		"$theLegend is undefined (not equal to $Value)"
	critical:	$goCRIT && $checkNE && ("$theOID" != "$Value")	"$theLegend is $theOID (not equal to $Value)"
	critical:	$goCRIT && $checkEQ && ("$theOID" == "$Value")	"$theLegend is equal to $Value"

	alarm:		$goALRM && $checkNE && !defined("theOID")		"$theLegend is undefined (not equal to $Value)"
	alarm:		$goALRM && $checkNE && ("$theOID" != "$Value")	"$theLegend is $theOID (not equal to $Value)"
	alarm:		$goALRM && $checkEQ && ("$theOID" == "$Value")	"$theLegend is equal to $Value"

	warning:	$goWARN && $checkNE && !defined("theOID")		"$theLegend is undefined (not equal to $Value)"
	warning:	$goWARN && $checkNE && ("$theOID" != "$Value")	"$theLegend is $theOID (not equal to $Value)"
	warning:	$goWARN && $checkEQ && ("$theOID" == "$Value")	"$theLegend is equal to $Value"

</snmp-device-thresholds>

<snmp-device-display>
\B5\Comparison Probe\0P\  
   Value of $theLegend is $theOID \3G\$Units\mp0\ (Expected $Value)
</snmp-device-display>

<datasets>
	$theOID, "$Tag", "$Units", "true", "$Legend"
</datasets>
