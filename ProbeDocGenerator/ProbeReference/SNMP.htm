<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="Primary.online,Primary.print">
<head>
      <link rel="StyleSheet" href="../../../default.css" />
      <title>SNMP Probes</title>
</head>
<body>
<h1 class="L2">SNMP</h1>
<ul>
<li><a href="SNMP.htm#SNMP_Basic_OID">SNMP &gt; Basic OID<MadCap:xref href="SNMP.htm#SNMP_Basic_OID" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Comparison">SNMP &gt; Comparison<MadCap:xref href="SNMP.htm#SNMP_Comparison" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_High_Threshold">SNMP &gt; High Threshold<MadCap:xref href="SNMP.htm#SNMP_High_Threshold" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Low_Threshold">SNMP &gt; Low Threshold<MadCap:xref href="SNMP.htm#SNMP_Low_Threshold" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Range_Threshold">SNMP &gt; Range Threshold<MadCap:xref href="SNMP.htm#SNMP_Range_Threshold" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Restricted_Interface">SNMP &gt; Restricted Interface<MadCap:xref href="SNMP.htm#SNMP_Restricted_Interface" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Single_OID_Viewer">SNMP &gt; Single OID Viewer<MadCap:xref href="SNMP.htm#SNMP_Single_OID_Viewer" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_SNMP___High_PPS">SNMP &gt; SNMP   High PPS<MadCap:xref href="SNMP.htm#SNMP_SNMP___High_PPS" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_SNMP___High_Traffic">SNMP &gt; SNMP   High Traffic<MadCap:xref href="SNMP.htm#SNMP_SNMP___High_Traffic" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_SNMP___High_Util">SNMP &gt; SNMP   High Util<MadCap:xref href="SNMP.htm#SNMP_SNMP___High_Util" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_String_Comparison">SNMP &gt; String Comparison<MadCap:xref href="SNMP.htm#SNMP_String_Comparison" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Table_Viewer">SNMP &gt; Table Viewer<MadCap:xref href="SNMP.htm#SNMP_Table_Viewer" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>
<li><a href="SNMP.htm#SNMP_Trap_Viewer">SNMP &gt; Trap Viewer<MadCap:xref href="SNMP.htm#SNMP_Trap_Viewer" target="" title="" alt="" MadCap:conditions="Primary.print" /></a></li>

</ul>
<blockquote><p><a href="Probe_Index.htm">To Probe Index<MadCap:xref href="Probe_Index.htm" ></MadCap:xref></a></p></blockquote>
<a name="SNMP_Basic_OID"></a><h2>SNMP &gt; Basic OID</h2>
<blockquote>
<p><b>SNMP - Basic OID</b></p>
<p>This probe lets you monitor a single, user-defined MIB variable.</p>
<p><i>Object Name</i> is the name of the value that you want to monitor. This parameter is optional; the "object name" value only customizes the display in the popup window and chart legend.</p>
<p><i>Object ID</i> is the object identifier (OID) of the value that you want to monitor. If you wish to retrieve the value of a MIB variable that is not in a table, the OID must end with ".0" (e.g. "1.3.6.1.2.1.1.1.0").</p>
<p>This probe retrieves a lot of SNMP information from the device, including the MIB-II system group and the interfaces table. If you only want to monitor a single SNMP variable, you can use the SNMP/Single OID probe. </p>
<p><i>Filename: com.dartware.snmp.basic</i><br />
<i>Version: 0.7</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Comparison"></a><h2>SNMP &gt; Comparison</h2>
<blockquote>
<p><b>Comparison Probe</b></p>
<p>This probe retrieves a single SNMP MIB variable, compares it to a specified value, and sets the device's severity based on the comparison. It also displays the value in the Status Window.</p>
<p><b><i>Variable</i></b> specifies the MIB name or OID for the value to retrieve. If you have imported the MIB for this device, you may enter the symbolic name for this value, otherwise, simply enter its OID here. </p>
<p><b><i>Test</i></b> set the dropdown to indicate whether to alarm if the device is equal/not equal to the <b><i>Value</i></b> parameter. </p>
<p><b><i>Value</i></b> is the value to compare against.</p>
<p><b><i>Severity</i></b> for the device if the comparison isn't as expected. </p>
<p><b><i>Legend</i></b> is a text string used to identify the variable in the status window and any strip charts. If left blank, the variable's name or OID will be used.</p>
<p><b><i>Units</i></b> is an optional text string that will be displayed next to the value in the Status Window. You can use it for the unit of measure (packets/sec, degrees, etc.) </p>
<p><b><i>Tag</i></b> is a short text string that identifies a particular class of dataset. Tags will be used to correlate different variables from different probes that describe the same thing, such as CPU% or temperature.</p>
<p><i>Filename: com.dartware.snmp.oidcomparison.txt</i><br />
<i>Version: 1.10</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_High_Threshold"></a><h2>SNMP &gt; High Threshold</h2>
<blockquote>
<p><b>SNMP Value Too High</b></p>
<p>This probe retrieves a single SNMP MIB variable and compares it to the thresholds below. If the value goes above any of these thresholds, the device severity will go into the indicated state.</p>
<p><b><i>Variable</i></b> specifies the MIB name or OID for the value to retrieve. If you have imported the MIB for this device, you may enter the symbolic name for this value, otherwise, simply enter its OID here. </p>
<p><b><i>Critical, Alarm, and Warning</i></b> are the thresholds for those severities. They may be positive or negative numbers.</p>
<p><b><i>Legend</i></b> is a text string used to identify the variable in the status window and any strip charts. If left blank, the variable's name or OID will be used.</p>
<p><b><i>Units</i></b> is a text string that will be displayed next to the value in the Status Window. You can use it for the unit of measure (packets/sec, degrees, etc.) </p>
<p><b><i>Tag</i></b> is a short text string that identifies a particular class of dataset. Tags will be used to correlate different variables from different probes that describe the same thing, such as CPU% or temperature.</p>
<p><i>Filename: com.dartware.snmp.oidhigh.txt</i><br />
<i>Version: 1.5</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Low_Threshold"></a><h2>SNMP &gt; Low Threshold</h2>
<blockquote>
<p><b>SNMP Value Too Low</b></p>
<p>This probe retrieves a single SNMP MIB variable and compares it to the thresholds below. If the value goes below any of these thresholds, the device severity will go into the indicated state.</p>
<p><b><i>Variable</i></b> specifies the MIB name or OID for the value to retrieve. If you have imported the MIB for this device, you may enter the symbolic name for this value, otherwise, simply enter its OID here. </p>
<p><b><i>Critical, Alarm, and Warning</i></b> are the thresholds for those severities. They may be positive or negative numbers.</p>
<p><b><i>Legend</i></b> is a text string used to identify the variable in the status window and any strip charts. If left blank, the variable's name or OID will be used.</p>
<p><b><i>Units</i></b> is a text string that will be displayed next to the value in the Status Window. You can use it for the unit of measure (packets/sec, degrees, etc.) </p>
<p><b><i>Tag</i></b> is a short text string that identifies a particular class of dataset. Tags will be used to correlate different variables from different probes that describe the same thing, such as CPU% or temperature.</p>
<p><i>Filename: com.dartware.snmp.oidlow.txt</i><br />
<i>Version: 1.5</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Range_Threshold"></a><h2>SNMP &gt; Range Threshold</h2>
<blockquote>
<p><b>SNMP Value In Range Probe</b></p>
<p>This probe retrieves a single SNMP MIB variable and compares it to the thresholds below. If the value goes outside the designated bands, the device severity will go into the indicated state.</p>
<p><b><i>Variable</i></b> specifies the MIB name or OID for the value to retrieve. If you have imported the MIB for this device, you may enter the symbolic name for this value, otherwise, simply enter its OID here. </p>
<p><b><i>Critical, Alarm, and Warning</i></b> are the thresholds for those severities. They may be positive or negative numbers.</p>
<p><b><i>Legend</i></b> is a text string used to identify the variable in the status window and any strip charts. If left blank, the variable's name or OID will be used.</p>
<p><b><i>Units</i></b> is a text string that will be displayed next to the value in the Status Window. You can use it for the unit of measure (packets/sec, degrees, etc.) </p>
<p><b><i>Tag</i></b> is a short text string that identifies a particular class of dataset. Tags will be used to correlate different variables from different probes that describe the same thing, such as CPU% or temperature.</p>
<p><i>Filename: com.dartware.snmp.oidrange.txt</i><br />
<i>Version: 1.6</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Restricted_Interface"></a><h2>SNMP &gt; Restricted Interface</h2>
<blockquote>
<p><b>SNMP - Restricted Interface</b></p>
<p>This probe is identical to the Basic SNMP Traffic probe except it restricts the visible interfaces to those that match the specified <i>interface description</i>.</p>
<p><b>Interface Description</b> specifies which interfaces to display. Interfaces with a value of ifDescr that match this pattern will be visible on the map. Interfaces with non-matching ifDescr will automatically be hidden.</p>
<p><i>Filename: com.dartware.snmp.restrictedint.txt</i><br />
<i>Version: 0.1</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Single_OID_Viewer"></a><h2>SNMP &gt; Single OID Viewer</h2>
<blockquote>
<p><b>Single OID Viewer</b></p>
<p>This probe retrieves a single SNMP MIB variable and displays it in the device's Status Window.</p>
<p><b><i>Variable</i></b> specifies the MIB name or OID for the value to retrieve. If you have imported the MIB for this device, you may enter the symbolic name for this value, otherwise, simply enter its OID here. </p>
<p><b><i>Legend</i></b> is a text string used to identify the variable in the status window and any strip charts. If left blank, the variable's name or OID will be used.</p>
<p><b><i>Units</i></b> is a text string that will be displayed next to the value in the Status Window. You can use it for the unit of measure (packets/sec, degrees, etc.) </p>
<p><b><i>Tag</i></b> is a short text string that identifies a particular class of dataset. Tags will be used to correlate different variables from different probes that describe the same thing, such as CPU% or temperature.</p>
<p><i>Filename: com.dartware.snmp.oidsingle.txt</i><br />
<i>Version: 1.4</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_SNMP___High_PPS"></a><h2>SNMP &gt; SNMP   High PPS</h2>
<blockquote>
<p><b>High PPS Probe</b></p>
<p>This probe monitors the ifInPackets and ifOutPackets statistics of a particular interface on the device, and sets the device into alarm or warning when the packet rate exceeds certain thresholds. It also gives a DOWN alarm if the interface's ifOperStatus is not equal to 1 (up).</p>
<p>The <i>Port Number</i> parameter is the ifIndex of the port to monitor. </p>
<p>The <i>Warn Threshold</i> and <i>Alarm Threshold</i> parameters are in packets per second.</p>
<p><i>Filename: com.dartware.snmp.pps.txt</i><br />
<i>Version: 0.5</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_SNMP___High_Traffic"></a><h2>SNMP &gt; SNMP   High Traffic</h2>
<blockquote>
<p><b>High Traffic Probe</b></p>
<p>This probe monitors the ifInOctets and ifOutOctets traffic statistics of a particular interface on the device, and sets the device into alarm or warning when the traffic exceeds certain thresholds. It also gives a DOWN alarm if the interface's ifOperStatus is not equal to 1 (up).</p>
<p>The <i>Port Number</i> parameter is the ifIndex of the port to monitor. </p>
<p>The <i>Warn Threshold</i> and <i>Alarm Threshold</i> parameters are in bytes per second.</p>
<p><i>Filename: com.dartware.snmp.traffic.txt</i><br />
<i>Version: 0.3</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_SNMP___High_Util"></a><h2>SNMP &gt; SNMP   High Util</h2>
<blockquote>
<p><b>High Utilization Probe</b></p>
<p>This probe monitors the <i>utilization</i> of ifInOctets and ifOutOctets traffic statistics of a particular interface on the device, and sets the device into alarm or warning when the traffic exceeds certain utilization thresholds. </p>
<p>It also gives a DOWN alarm if the interface's ifOperStatus is not equal to 1 (up).</p>
<p>The <i>Port Number</i> parameter is the ifIndex of the port to monitor. </p>
<p>The <i>Warn Threshold</i> and <i>Alarm Threshold</i> parameters are in percent of bandwidth utilization.</p>
<p><i>Filename: com.dartware.snmp.traffic-util.txt</i><br />
<i>Version: 0.2</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_String_Comparison"></a><h2>SNMP &gt; String Comparison</h2>
<blockquote>
<p><b>Comparison Probe</b></p>
<p>This probe retrieves a single SNMP MIB variable, compares it to a specified value, and sets the device's severity based on the comparison. It also displays the value in the Status Window.</p>
<p><b><i>Variable</i></b> specifies the MIB name or OID for the value to retrieve. If you have imported the MIB for this device, you may enter the symbolic name for this value, otherwise, simply enter its OID here. </p>
<p><b><i>Test</i></b> set the dropdown to indicate whether to alarm if the device is equal/not equal to the <b><i>Value</i></b> parameter. </p>
<p><b><i>Value</i></b> is the value to compare against.</p>
<p><b><i>Severity</i></b> for the device if the comparison isn't as expected. </p>
<p><b><i>Legend</i></b> is a text string used to identify the variable in the status window and any strip charts. If left blank, the variable's name or OID will be used.</p>
<p><b><i>Units</i></b> is an optional text string that will be displayed next to the value in the Status Window. You can use it for the unit of measure (packets/sec, degrees, etc.) </p>
<p><b><i>Tag</i></b> is a short text string that identifies a particular class of dataset. Tags will be used to correlate different variables from different probes that describe the same thing, such as CPU% or temperature.</p>
<p><i>Filename: com.dartware.snmp.oidstrcomparison.txt</i><br />
<i>Version: 1.8</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Table_Viewer"></a><h2>SNMP &gt; Table Viewer</h2>
<blockquote>
<p><b>SNMP Table Viewer Probe </b></p>
<p>This probe displays the contents of several useful tables from common SNMP MIBs. It retrieves its data by walking the SNMP data values in the tables.</p>
<p><b>ifTable</b> </p>
<p>The "Interfaces" table gives information about the physical and logical interfaces of the device. It displays the following columns: <i>ifIndex</i>, <i>ifDescr</i>, <i>ifType</i>, <i>ifSpeed</i>, <i>ifPhysAddress</i>, <i>ifOperStatus</i>, and <i>ifAdminStatus</i>. It is defined in MIB-II (RFC-1213) and updated in the IF-MIB.</p>
<p><b>ifXTable</b> </p>
<p>The Extended Interfaces table defined in IF-MIB. This is an extended version of ifTable and adds the <i>ifName</i> and <i>ifAlias</i> fields/columns to those shown in the ifTable above.</p>
<p><b>Traffic Counters</b> </p>
<p>This table displays the traffic counters: ifInOctets and ifOutOctets from the MIB-II ifTable, and the ifHCInOctets and ifHCOutOctets from the IF-MIB. To determine the traffic rate, refresh the window and compare two separate readings. The difference divided by the time between the refreshes (in seconds) will be the number of bytes/second.</p>
<p><b>tcpConnTable</b> </p>
<p>Displays information about any connections that are present: Variables include <i>tcpConnLocalAddress</i>, <i>tcpConnLocalPort</i>, <i>tcpConnRemAddress</i>, and <i>tcpConnRemPort</i>. It is defined in MIB-II.</p>
<p><b>udpTable</b> </p>
<p>Displays information about any UDP listeners that are present: Variables include <i>udpLocalAddress</i>, <i>udpLocalPort</i>. It is defined in MIB-II.</p>
<p><b>ipAddrTable</b> </p>
<p>This table displays the IP address/mask/broadcast address for each interface. Includes <i>ipAdEntAddr</i>, <i>ipAdEntifIndex</i>, <i>ipAdEntNetMask</i>, <i>ipAdEntBcastAddr</i>,  and <i>ipAdEntReasmMaxSize</i>. It is defined in RFC-1213, and updated in the IP-MIB. </p>
<p><b>ipRouteTable</b> </p>
<p>This table (currently deprecated) comes from RFC-1213 (MIB-II). </p>
<p><b>ipCidrRouteTable</b> and <b>ipForwardTable</b> </p>
<p>These tables come from the IP-FORWARD-MIB, which displays information about CIDR multipath IP Routes. Note: the ipForwardTable obsoletes the ipRouteTable of MIB-II, and is in turn obsoleted by the ipCidrRouteTable.</p>
<p><b>ipNetToMediaTable</b> </p>
<p>The Net Address to Media Address table (also known as the "ARP Table") displays these fields/columns: <i>ipNetToMediaIfIndex</i>, <i>ipNetToMediaNetAddress</i>, <i>ipNetToMediaPhysAddress</i>, and <i>ipNetToMediaType</i>. It is defined in RFC-1213.</p>
<p><b>dot1dTpFdbTable</b> </p>
<p>The "Bridge MIB" (RFC1493) displays the forwarding database for transparent bridges. </p>
<p>The Status Window contains links to each of these tables. Click the link to see the contents of the table on the selected device.</p>
<p>This probe requires that you first import these MIBs: <a href="http://www.ietf.org/rfc/rfc1213.txt">RFC1213-MIB (MIB-II)</a>, <a href="http://www.ietf.org/rfc/rfc1493.txt">Bridge MIB (rfc1493)</a>, <a href="http://www.ietf.org/rfc/rfc2011.txt">IP-MIB (rfc2011)</a>, <a href="http://www.ietf.org/rfc/rfc2863.txt">IF-MIB (rfc2863)</a>, and <a href="http://www.ietf.org/rfc/rfc2096.txt">IP-FORWARD-MIB (rfc2096).</a> These are all bundled together in a <a href="http://intermapper.com/support/users/probes.html#tableviewer">single zip archive.</a> </p>
<p><i>Filename: com.dartware.snmp.tableviewer.txt</i><br />
<i>Version: 1.8</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
<a name="SNMP_Trap_Viewer"></a><h2>SNMP &gt; Trap Viewer</h2>
<blockquote>
<p><b>Trap Viewer Probe</b></p>
<p>This probe listens for trap packets to arrive and displays the contents of the trap in the Status Window. It does not actively poll the device, nor does it take any action based on the trap contents. </p>
<p>You can view all the variables that have been parsed from the trap packet in the device's Status Window. You can also use this as a prototype for making your own trap probes.</p>
<p><b>How the Trap Viewer Probe Works</b></p>
<p>When a trap arrives, the probe parses the trap to get the values from the trap's header as well as the first ten items in its Varbind List. It assigns all these values to variables that can be used in the probe and displayed in the Status Window.</p>
<p>To see how this probe works, you can configure your equipment to send traps to InterMapper, or use the net-snmp <b>snmptrap</b> command. Either way, the Status Window will show the values present in any traps that arrive.</p>
<p>For more information on the <b>snmptrap</b> command, read the net-snmp documentation for the <a href="http://www.net-snmp.org/tutorial/tutorial-4/commands/snmptrap.html">trap tutorial</a> and the <a href="http://www.net-snmp.org/docs/man/snmpinform.html">snmptrap command</a>. The remainder of this note shows how to send a trap with variables from the Dartware MIB:</p>
<p>     </p>
<p><i>SNMPv1 Traps</i></p>
<p>     </p>
<p>a) Add a device to a map with the IP address <i>192.168.56.78</i></p>
<p>b) Set it to use this probe</p>
<p>c) Issue the snmptrap command below from the command line (it should all be on one line):</p>
<p>     </p>
<p>     snmptrap -v 1 -c commString localhost </p>
<p>          1.3.6.1.4.1.6306 192.168.56.78 6 123 4567890 </p>
<p>          1.3.6.1.4.1.6306.2.1.1.0 s "05/08 23:26:35"</p>
<p>          1.3.6.1.4.1.6306.2.1.2.0 s Critical </p>
<p>          1.3.6.1.4.1.6306.2.1.3.0 s "Big Router" </p>
<p>          1.3.6.1.4.1.6306.2.1.4.0 s "Critical: High Traffic" </p>
<p>          1.3.6.1.4.1.6306.2.1.5.0 s "127.0.0.1" </p>
<p>          1.3.6.1.4.1.6306.2.1.6.0 s "SNMP Traffic Probe" </p>
<p>          </p>
<p><i>SNMPv2c Traps</i></p>
<p>     </p>
<p>a) Add a device to the map with an IP address of <i>localhost</i></p>
<p>b) Set it to use this probe</p>
<p>c) Issue the snmptrap command below from the command line (it should all be on one line)</p>
<p>     </p>
<p>     snmptrap -v 2c -c commString localhost </p>
<p>          4567890 1.3.6.1.4.1.6306 </p>
<p>          1.3.6.1.4.1.6306 192.168.56.78 6 123 4567890 </p>
<p>          1.3.6.1.4.1.6306.2.1.1.0 s "05/08 13:26:35"</p>
<p>          1.3.6.1.4.1.6306.2.1.2.0 s Critical </p>
<p>          1.3.6.1.4.1.6306.2.1.3.0 s "Big Router" </p>
<p>          1.3.6.1.4.1.6306.2.1.4.0 s "Critical: High Traffic" </p>
<p>          1.3.6.1.4.1.6306.2.1.5.0 s "127.0.0.1" </p>
<p>          1.3.6.1.4.1.6306.2.1.6.0 s "SNMP Traffic Probe" </p>
<p><i>Filename: com.dartware.snmp.trapdisplay.txt</i><br />
<i>Version: 2.2</i></p>
<p><a href="SNMP.htm">Back to Top</a></p>
</blockquote>
</body>
</html>

